{
  "api/HenryHoffman.UnlockProtocol.Custom.html": {
    "href": "api/HenryHoffman.UnlockProtocol.Custom.html",
    "title": "Namespace HenryHoffman.UnlockProtocol.Custom | Unlock Protocol for Unity",
    "keywords": "Namespace HenryHoffman.UnlockProtocol.Custom Classes UnlockCustom The manager component for a custom unlock integration. This component should be present at all times in a Unity scene when interacting with Unlock Protocol for a custom integration (not using the paywall). UnlockCustom.GetHasValidKeySuccessParams GetHasValidKeySuccess parameters UnlockCustom.LockErrorParams Lock error parameters"
  },
  "api/HenryHoffman.UnlockProtocol.Custom.UnlockCustom.GetHasValidKeySuccessParams.html": {
    "href": "api/HenryHoffman.UnlockProtocol.Custom.UnlockCustom.GetHasValidKeySuccessParams.html",
    "title": "Class UnlockCustom.GetHasValidKeySuccessParams | Unlock Protocol for Unity",
    "keywords": "Class UnlockCustom.GetHasValidKeySuccessParams GetHasValidKeySuccess parameters Inheritance Object UnlockCustom.GetHasValidKeySuccessParams Namespace : HenryHoffman.UnlockProtocol.Custom Assembly : cs.temp.dll.dll Syntax public class GetHasValidKeySuccessParams Fields hasKey Whether the user already has a valid key to the lock Declaration public bool hasKey Field Value Type Description Boolean lockAddress The unique lock address Declaration public string lockAddress Field Value Type Description String network Network chain ID. See here for an updated list of networks that Unlock Protocol supports. Declaration public int network Field Value Type Description Int32 recipient The wallet address of the recipient of the key Declaration public string recipient Field Value Type Description String"
  },
  "api/HenryHoffman.UnlockProtocol.Custom.UnlockCustom.html": {
    "href": "api/HenryHoffman.UnlockProtocol.Custom.UnlockCustom.html",
    "title": "Class UnlockCustom | Unlock Protocol for Unity",
    "keywords": "Class UnlockCustom The manager component for a custom unlock integration. This component should be present at all times in a Unity scene when interacting with Unlock Protocol for a custom integration (not using the paywall). Inheritance Object UnlockCustom Namespace : HenryHoffman.UnlockProtocol.Custom Assembly : cs.temp.dll.dll Syntax public class UnlockCustom : MonoBehaviour Fields accountsChanged Event is triggered when the user changes their account Declaration public UnityEvent<List<string>> accountsChanged Field Value Type Description UnityEvent < List < String >> disconnected Event is triggered when the user disconnects their wallet Declaration public UnityEvent disconnected Field Value Type Description UnityEvent getBalanceFailed Event is triggered when the user wallat balance fails to be retrieved Declaration public UnityEvent<string> getBalanceFailed Field Value Type Description UnityEvent < String > getBalanceSuccess Event is triggered when the user wallat balance is successfully retrieved Declaration public UnityEvent<float> getBalanceSuccess Field Value Type Description UnityEvent < Single > getHasValidKey Event is triggered when the lock is succesfully queried to determine if the user has a valid key Declaration public UnityEvent<UnlockCustom.GetHasValidKeySuccessParams> getHasValidKey Field Value Type Description UnityEvent < UnlockCustom.GetHasValidKeySuccessParams > getHasValidKeyFailed Event is triggered when failing to query whether the user has a valid key Declaration public UnityEvent<UnlockCustom.LockErrorParams> getHasValidKeyFailed Field Value Type Description UnityEvent < UnlockCustom.LockErrorParams > getLockFailed Event is triggered when the lock fails to be retrieved Declaration public UnityEvent<UnlockCustom.LockErrorParams> getLockFailed Field Value Type Description UnityEvent < UnlockCustom.LockErrorParams > getLockSuccess Event is triggered when the lock is successfully retrieved Declaration public UnityEvent<Lock> getLockSuccess Field Value Type Description UnityEvent < Lock > getNetworkIdFailed Event is triggered when the user network chain ID fails to be retrieved Declaration public UnityEvent getNetworkIdFailed Field Value Type Description UnityEvent getNetworkIdSuccess Event is triggered when the user network chain ID is retrieved Declaration public UnityEvent<int> getNetworkIdSuccess Field Value Type Description UnityEvent < Int32 > networkChanged Event is triggered when the user changes the network Declaration public UnityEvent<int> networkChanged Field Value Type Description UnityEvent < Int32 > networkConfig The network configuration object Declaration public NetworkConfig networkConfig Field Value Type Description NetworkConfig purchaseKeyFailed Event is triggered when a key purchase fails Declaration public UnityEvent<UnlockCustom.LockErrorParams> purchaseKeyFailed Field Value Type Description UnityEvent < UnlockCustom.LockErrorParams > purchaseKeySuccess Event is triggered when a key purchase is successful Declaration public UnityEvent<string> purchaseKeySuccess Field Value Type Description UnityEvent < String > walletConnectedFail Event is triggered when the users wallet fails to connect to the application Declaration public UnityEvent<string> walletConnectedFail Field Value Type Description UnityEvent < String > walletConnectedSuccess Event is triggered when the users wallet successfully connects to the application Declaration public UnityEvent<string> walletConnectedSuccess Field Value Type Description UnityEvent < String > Properties Instance Static class instance reference to easily reference from other scripts Declaration public static UnlockCustom Instance { get; } Property Value Type Description UnlockCustom WalletAddress Gets the connected wallet address Declaration public string WalletAddress { get; } Property Value Type Description String Methods ConnectMetaMask() Connect to MetaMask wallet Declaration public void ConnectMetaMask() ConnectWalletConnect() Connect to WalletConnect wallet Declaration public void ConnectWalletConnect() GetBalance() Get the user's wallet balance Declaration public void GetBalance() GetHasValidKey(LockConfig, String) Checks if the user has a non-expired key. Declaration public void GetHasValidKey(LockConfig lockConfig, string recipient) Parameters Type Name Description LockConfig lockConfig The LockConfig object which defines all the lock parameters needed to retrieve it String recipient The user's address to check GetLock(LockConfig) Retrieve a lock Declaration public void GetLock(LockConfig lockConfig) Parameters Type Name Description LockConfig lockConfig The LockConfig object which defines all the lock parameters needed to retrieve it GetNetworkID() Get the user's network chain ID. See here for an updated list of networks that Unlock Protocol supports. Declaration public void GetNetworkID() PurchaseKey(LockConfig) Purchase a key to a lock Declaration public void PurchaseKey(LockConfig lockConfig) Parameters Type Name Description LockConfig lockConfig The LockConfig object which defines all the lock parameters needed to retrieve it"
  },
  "api/HenryHoffman.UnlockProtocol.Custom.UnlockCustom.LockErrorParams.html": {
    "href": "api/HenryHoffman.UnlockProtocol.Custom.UnlockCustom.LockErrorParams.html",
    "title": "Class UnlockCustom.LockErrorParams | Unlock Protocol for Unity",
    "keywords": "Class UnlockCustom.LockErrorParams Lock error parameters Inheritance Object UnlockCustom.LockErrorParams Namespace : HenryHoffman.UnlockProtocol.Custom Assembly : cs.temp.dll.dll Syntax public class LockErrorParams Fields error Error from JavaScript frontend Declaration public string error Field Value Type Description String lockAddress The unique address of the lock Declaration public string lockAddress Field Value Type Description String"
  },
  "api/HenryHoffman.UnlockProtocol.html": {
    "href": "api/HenryHoffman.UnlockProtocol.html",
    "title": "Namespace HenryHoffman.UnlockProtocol | Unlock Protocol for Unity",
    "keywords": "Namespace HenryHoffman.UnlockProtocol Classes Lock The Unlock Protocol Lock object. This object represents the retrieved lock, and contains all the lock details. LockConfig The lock configuration scriptable object. Create an instance of this object to define a lock configuration. LockConfig.Lock The lock configuration. This is where local locks are configured for retrieving later in the application cycle. NetworkConfig The network configuration scriptable object. Create an instance of this object to define your network configurations. NetworkConfig.Network The network configuration class. This is where networks used in the application are defined."
  },
  "api/HenryHoffman.UnlockProtocol.Lock.html": {
    "href": "api/HenryHoffman.UnlockProtocol.Lock.html",
    "title": "Class Lock | Unlock Protocol for Unity",
    "keywords": "Class Lock The Unlock Protocol Lock object. This object represents the retrieved lock, and contains all the lock details. Inheritance Object Lock Namespace : HenryHoffman.UnlockProtocol Assembly : cs.temp.dll.dll Syntax public class Lock Fields asOf As of block number Declaration public int asOf Field Value Type Description Int32 balance The balance of the lock Declaration public string balance Field Value Type Description String beneficiary The beneficiary who recieves funds on withdrawl Declaration public string beneficiary Field Value Type Description String currencyContractAddress The contract address for the lock currency Declaration public string currencyContractAddress Field Value Type Description String currencySymbol The symbol used for the lock currency Declaration public string currencySymbol Field Value Type Description String expirationDuration The duration until expiration of the lock Declaration public int expirationDuration Field Value Type Description Int32 keyPrice The price of a key for the lock Declaration public string keyPrice Field Value Type Description String lockAddress Address of the lock Declaration public string lockAddress Field Value Type Description String maxNumberOfKeys The maximum number of keys available Declaration public int maxNumberOfKeys Field Value Type Description Int32 name The name of the lock Declaration public string name Field Value Type Description String outstandingKeys The number of outstanding keys available Declaration public int outstandingKeys Field Value Type Description Int32 publicLockVersion Public lock version Declaration public int publicLockVersion Field Value Type Description Int32"
  },
  "api/HenryHoffman.UnlockProtocol.LockConfig.html": {
    "href": "api/HenryHoffman.UnlockProtocol.LockConfig.html",
    "title": "Class LockConfig | Unlock Protocol for Unity",
    "keywords": "Class LockConfig The lock configuration scriptable object. Create an instance of this object to define a lock configuration. Inheritance Object LockConfig Namespace : HenryHoffman.UnlockProtocol Assembly : cs.temp.dll.dll Syntax public class LockConfig : ScriptableObject Fields lock The lock object Declaration public LockConfig.Lock lock Field Value Type Description LockConfig.Lock"
  },
  "api/HenryHoffman.UnlockProtocol.LockConfig.Lock.html": {
    "href": "api/HenryHoffman.UnlockProtocol.LockConfig.Lock.html",
    "title": "Class LockConfig.Lock | Unlock Protocol for Unity",
    "keywords": "Class LockConfig.Lock The lock configuration. This is where local locks are configured for retrieving later in the application cycle. Inheritance Object LockConfig.Lock Namespace : HenryHoffman.UnlockProtocol Assembly : cs.temp.dll.dll Syntax [Serializable] public class Lock Properties Address Declaration public string Address { get; set; } Property Value Type Description String Name Declaration public string Name { get; set; } Property Value Type Description String Network Declaration public int Network { get; set; } Property Value Type Description Int32 Referrer Declaration public string Referrer { get; set; } Property Value Type Description String"
  },
  "api/HenryHoffman.UnlockProtocol.NetworkConfig.html": {
    "href": "api/HenryHoffman.UnlockProtocol.NetworkConfig.html",
    "title": "Class NetworkConfig | Unlock Protocol for Unity",
    "keywords": "Class NetworkConfig The network configuration scriptable object. Create an instance of this object to define your network configurations. Inheritance Object NetworkConfig Namespace : HenryHoffman.UnlockProtocol Assembly : cs.temp.dll.dll Syntax public class NetworkConfig : ScriptableObject Fields networks Array of Network objects supported Declaration public NetworkConfig.Network[] networks Field Value Type Description NetworkConfig.Network [] Methods GetSerialized() Serializes the Network dictionary object Declaration public string GetSerialized() Returns Type Description String A serialized json string of the network config"
  },
  "api/HenryHoffman.UnlockProtocol.NetworkConfig.Network.html": {
    "href": "api/HenryHoffman.UnlockProtocol.NetworkConfig.Network.html",
    "title": "Class NetworkConfig.Network | Unlock Protocol for Unity",
    "keywords": "Class NetworkConfig.Network The network configuration class. This is where networks used in the application are defined. Inheritance Object NetworkConfig.Network Namespace : HenryHoffman.UnlockProtocol Assembly : cs.temp.dll.dll Syntax [Serializable] public class Network Fields chainID Network chain ID. See here for an updated list of networks that Unlock Protocol supports. Declaration public int chainID Field Value Type Description Int32 locksmithUri This is used for \"optimistic\" unlocking: a service which ensures that \"pending\" transactions are still taken into account to unlock a page. Declaration public string locksmithUri Field Value Type Description String networkName Network name Declaration public string networkName Field Value Type Description String provider Ethereum Gateway url Declaration public string provider Field Value Type Description String subgraphURI The Subgraph Url Declaration public string subgraphURI Field Value Type Description String unlockAddress The Unlock address Declaration public string unlockAddress Field Value Type Description String unlockAppUrl The Unlock App Url Declaration public string unlockAppUrl Field Value Type Description String"
  },
  "api/HenryHoffman.UnlockProtocol.Paywall.html": {
    "href": "api/HenryHoffman.UnlockProtocol.Paywall.html",
    "title": "Namespace HenryHoffman.UnlockProtocol.Paywall | Unlock Protocol for Unity",
    "keywords": "Namespace HenryHoffman.UnlockProtocol.Paywall Classes PaywallConfig The paywall configuration scriptable object. Create an instance of this object to define your paywall configurations. PaywallConfig.CallToAction Call to action object PaywallConfig.Config The paywall configuration class. This is where paywalls used in the application are defined. UnlockPaywall The manager component for a paywall unlock integration. This component should be present at all times in a Unity scene when interacting with Unlock Protocol using a paywall."
  },
  "api/HenryHoffman.UnlockProtocol.Paywall.PaywallConfig.CallToAction.html": {
    "href": "api/HenryHoffman.UnlockProtocol.Paywall.PaywallConfig.CallToAction.html",
    "title": "Class PaywallConfig.CallToAction | Unlock Protocol for Unity",
    "keywords": "Class PaywallConfig.CallToAction Call to action object Inheritance Object PaywallConfig.CallToAction Namespace : HenryHoffman.UnlockProtocol.Paywall Assembly : cs.temp.dll.dll Syntax [Serializable] public class CallToAction Fields default Default call to action text Declaration public string default Field Value Type Description String expired Expired call to action text Declaration public string expired Field Value Type Description String metadata TODO Declaration public string metadata Field Value Type Description String"
  },
  "api/HenryHoffman.UnlockProtocol.Paywall.PaywallConfig.Config.html": {
    "href": "api/HenryHoffman.UnlockProtocol.Paywall.PaywallConfig.Config.html",
    "title": "Class PaywallConfig.Config | Unlock Protocol for Unity",
    "keywords": "Class PaywallConfig.Config The paywall configuration class. This is where paywalls used in the application are defined. Inheritance Object PaywallConfig.Config Namespace : HenryHoffman.UnlockProtocol.Paywall Assembly : cs.temp.dll.dll Syntax [Serializable] public class Config Fields callToAction The CallToAction object which defines call to action parameters. Declaration public PaywallConfig.CallToAction callToAction Field Value Type Description PaywallConfig.CallToAction checkoutUrlBase The base url used for the paywall checkout. This is useful if a beta release has a different base url. Declaration public string checkoutUrlBase Field Value Type Description String icon The icon displayed in the checkout modal. Declaration public string icon Field Value Type Description String lockConfigs Array of LockConfig objects. This is so your paywall can support multiple locks if needed. Declaration public LockConfig[] lockConfigs Field Value Type Description LockConfig [] messageToSign If supplied, the user is prompted to sign this message using their wallet. Declaration public string messageToSign Field Value Type Description String metadataInputs TODO Declaration public string[] metadataInputs Field Value Type Description String [] network Network chain ID. See here for an updated list of networks that Unlock Protocol supports. Declaration public int network Field Value Type Description Int32 persistentCheckout true if the modal cannot be closed, defaults to false when embedded. Declaration public bool persistentCheckout Field Value Type Description Boolean pessimistic By default, to reduce friction, we do not require users to wait for the transaction to be mined before offering them to be redirected. By setting this to true, users will need to wait for the transaction to have been mined in order to proceed to the next step. Declaration public bool pessimistic Field Value Type Description Boolean referrer The address which will receive UDT tokens (if the transaction is applicable) Declaration public string referrer Field Value Type Description String useDelegatedProvider The delegated provider allows the embedded paywall to synchronize with the provider used on the host page Declaration public bool useDelegatedProvider Field Value Type Description Boolean"
  },
  "api/HenryHoffman.UnlockProtocol.Paywall.PaywallConfig.html": {
    "href": "api/HenryHoffman.UnlockProtocol.Paywall.PaywallConfig.html",
    "title": "Class PaywallConfig | Unlock Protocol for Unity",
    "keywords": "Class PaywallConfig The paywall configuration scriptable object. Create an instance of this object to define your paywall configurations. Inheritance Object PaywallConfig Namespace : HenryHoffman.UnlockProtocol.Paywall Assembly : cs.temp.dll.dll Syntax public class PaywallConfig : ScriptableObject Fields config Declaration public PaywallConfig.Config config Field Value Type Description PaywallConfig.Config"
  },
  "api/HenryHoffman.UnlockProtocol.Paywall.UnlockPaywall.html": {
    "href": "api/HenryHoffman.UnlockProtocol.Paywall.UnlockPaywall.html",
    "title": "Class UnlockPaywall | Unlock Protocol for Unity",
    "keywords": "Class UnlockPaywall The manager component for a paywall unlock integration. This component should be present at all times in a Unity scene when interacting with Unlock Protocol using a paywall. Inheritance Object UnlockPaywall Namespace : HenryHoffman.UnlockProtocol.Paywall Assembly : cs.temp.dll.dll Syntax public class UnlockPaywall : MonoBehaviour Fields paywallConfig The paywall configuration scriptable object. Declaration public PaywallConfig paywallConfig Field Value Type Description PaywallConfig stateLocked Event is triggered when the paywall is locked Declaration public UnityEvent stateLocked Field Value Type Description UnityEvent stateUnlocked Event is triggered when the paywall is unlocked Declaration public UnityEvent stateUnlocked Field Value Type Description UnityEvent Methods LoadCheckoutModal(LockConfig) Show the paywall to allow user to purchase a key. Declaration public void LoadCheckoutModal(LockConfig lockConfig) Parameters Type Name Description LockConfig lockConfig"
  },
  "demos/adfree.html": {
    "href": "demos/adfree.html",
    "title": "Pay for Ad-Free Experience | Unlock Protocol for Unity",
    "keywords": "Pay for Ad-Free Experience <!-- > Ads getting in the way of gameplay? Unlock an ad-free experience. Ads are a great way to generate revenue in WebGL games, but some players prefer an ad-free experience. To appeal to these gamers without sacrificing revenue, why not token-gate ad-free gameplay? In this demo we show ... todo --> Coming soon!"
  },
  "demos/paywall.html": {
    "href": "demos/paywall.html",
    "title": "Paywall Access to a Premium Game | Unlock Protocol for Unity",
    "keywords": "Paywall Access to a Premium Game A demo showcasing token-gating access to premium in-game content In this demo, we showcase the Unlock Protocol Paywall integrated into the Unity Dragon Crashers project. Once the game loads up, the user needs to purchase access to the game by clicking the 'Unlock' button. A paywall appears, allowing the user to purchase access to the game with crypto or credit card. Once a purchase is completed, the user gets an access token NFT, and they can play the full game."
  },
  "demos/poc.html": {
    "href": "demos/poc.html",
    "title": "Proof of Completion | Unlock Protocol for Unity",
    "keywords": "Proof of Completion <!-- > Ads getting in the way of gameplay? Unlock an ad-free experience. Ads are a great way to generate revenue in WebGL games, but some players prefer an ad-free experience. To appeal to these gamers without sacrificing revenue, why not token-gate ad-free gameplay? In this demo we show ... todo --> Coming soon!"
  },
  "demos/shop.html": {
    "href": "demos/shop.html",
    "title": "Buying Items in a Store | Unlock Protocol for Unity",
    "keywords": "Buying Items in a Store A demo showcasing an RPG-style store with a number of items available to purchase In this demo, we showcase the custom Unlock integration, allowing the user to connect with MetaMask or WalletConnect and display their ETH balance and account details all using native Unity UI. Once connected, there's a number of chests, with keys available to purchase as NFTs using Unlock Protocol. Once a purchase is completed, the state of the chest is updated visually to let the player know they now have access."
  },
  "demos/tickets.html": {
    "href": "demos/tickets.html",
    "title": "Tickets for a Metaverse Concert | Unlock Protocol for Unity",
    "keywords": "Tickets for a Metaverse Concert A demo where you can buy tickets for a deadmau5 concert in the metaverse Whilst Unlock Protocol is one of the most popular NFT-ticketing solutions for physical events, it can also be used for ticketing digital events! In this demo, we showcase using the Unlock Paywall to grant player access to a deadmau5 concert streamed through Audius. Upon buying an NFT ticket with crypto or credit card, an NPC lets the player into the gig, where they can even do a little dance."
  },
  "getting-started.html": {
    "href": "getting-started.html",
    "title": "Getting Started | Unlock Protocol for Unity",
    "keywords": "Getting Started Install In Unity, open the Package Manager by opening Window/Package Manager Then click on the + button on the upper-left-hand corner of the Package Manager, select \"Add package from git URL...\" on the context menu, then paste the following: https://github.com/thehen/unlock-unity-package.git?path=/Unlock%20Unity%20Package Now setup Unlock Protocol by selecting Unlock Protocol/Setup Unlock Protocol . Set your build platform by opening File/Build Settings and under Platform, selecting WebGL . Finally, open up Edit/Project Settings/Player and under the Resolution and Presentation dropdown, select the Unlock-paywall WebGL Template. <!-- ## Import the Examples 1. In Unity, open the Package Manager by opening `Window/Package Manager` 1. Ensure you're viewing `Packages: In Project` and select `Unlock Protocol` 2. Under the Samples dropdown, press import next to the sample you want to include in the project. ![samples](images/samples.png) --> Adding the Paywall to a new Scene 1.) Create a new Unity scene and open it up. 2.) Create a Lock config file by selecting Assets/Create/Unlock/Lock Config 3.) Select the Lock config file and fill in the lock details as follows. Name: Unity Plugin Demo Network: 5 Address 0x2816d7651231ae260a7f39fdefbf0d64a8f5fbdb 4.) Create a Paywall config file by selecting Assets/Create/Unlock/Paywall Config . 5.) Select the Paywall config file and add your Lock config file to the Lock Configs: 6.) Add a UI Canvas and a Button by selecting GameObject/UI/Legacy/Button . 7.) We now need to create the Unlock Paywall Manager. Create a new GameObject by selecting GameObject/Create Empty and add an UnlockPaywall component to it and set the parameters to match the following: 8.) Select the button you added before, and set the OnClick event to the following: 9.) Select File/Build Settings , ensure your build target is WebGL, and press Build and Run to test the scene. You should be presented with an empty scene and a button. Upon pressing the button, the payment flow will begin. After succesful payment, the button should then disappear."
  },
  "index.html": {
    "href": "index.html",
    "title": "Unlock Protocol for Unity | Unlock Protocol for Unity",
    "keywords": "Unlock Protocol for Unity Add paid memberships and content access to your Unity WebGL projects. Overview Easily add payments and NFTs to your Unity WebGL project - no coding necessary. Users can purchase NFTs to grant access to content, purchase in-game items, provide ad-free experiences, buy tickets to in-game events, and lots more! Features Accept payment in ETH or any other ERC20 token Credit card payments supported Ethereum Mainnet, Goerli (Testnet), Optimism, Binance Smart Chain, Gnosis, Polygon, Arbitrum, Celo, Avalanche, Mumbai (Polygon) network support Set a limited or unlimited number of keys Set duration for how long the keys last for (useful for recurring subscriptions!)"
  },
  "tutorials/custom.html": {
    "href": "tutorials/custom.html",
    "title": "Adding NFTs to your Unity Game | Unlock Protocol for Unity",
    "keywords": "Adding NFTs to your Unity Game Coming soon!"
  },
  "tutorials/paywall.html": {
    "href": "tutorials/paywall.html",
    "title": "Adding a Paywall to an Existing Game | Unlock Protocol for Unity",
    "keywords": "Adding a Paywall to an Existing Game Coming soon!"
  }
}